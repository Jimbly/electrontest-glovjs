Next:

Check steam implementation of score user provider
  Use Steam username for scores automatically
  Cannot cache user Id from Steam in local storage, even if same provider, we might be a new user!
    Similar for score systems saving of local results / scores, these need to be in the user record, or invalidated upon user ID change
    Also invalidate player name so playing un-auth'd after playing on Steam doesn't get you your Steam name

Exceptions in unpromisify() are going to neither the error handler nor the uncaught rejection handler!
  Test with referencing unknown function in steamInit
Submit rename upon Steam username change automatically
Pipe score system to Steam leaderboards if auth'd

Get a clean flow from client code to greenworks working - https://stackoverflow.com/questions/44391448/electron-require-is-not-defined
  Desired Steam API:
    steamInited(): boolean (sync, needed during startup code?)
      also some kind of ownership check for demo logic?
    steamGetSteamID(): string | null (or, async query can be used in scores system?)
    steamGetDisplayName(): string | null
    steamSetRichPresence(status: string | null)
    void steamSetAchievement(const char *api_name, bool unlocked);
    U64 steamGetAchievement(const char *api_name); // returns timestamp or 0
    void steamShowAchievementProgress(const char *api_name, U32 cur, U32 max);
    void steamSetStat(const char *api_name, int value);
    int steamGetStat(const char *api_name);
    also something to auth with the server?
      steam ID + auth -> (private) user id for future communication?
    steamAvatarForAccount() - needs to hook onPersonaStateChanged()

add fix for insecure content warning, ensure scores, reports, errors, etc still work
build pipeline: how do we add app-defined targets via config.project?  Just allow adding new build targets at configure-time?
build pipeline: get reasonable sourcemap URL in production bundles (back to localhost:3000 and/or sourcemap server with version)
crash reports: globalExtra is not showing up in UI (do I need to add something to my server config?)
Get production build task working
  Any way to have only a single npm install folder?  How big? Big!
    Special Forge config flow that simply replaces files in the after copy step or something?
  Will _also_ need a demo build task, or can Demos ask Steam if they're the demo / check if they're owned?
  electron-package-dev right now is running as production mode, should be dev (just don't package the asar?)
Add a steam/electron platform if we need some special behavior?
  Probably we just have a "isSteam()" run-time query?
Renderer crash is not exiting the app gracefully / showing any status
Icons: https://www.electronforge.io/guides/create-and-add-icons
Error reporting for JavaScript errors in the main thread (and preload code?)
Figure out why electron is blocking async typescript (maybe only happens before changing electron-dev to not depend on TypeScript?)
